{"version":3,"sources":["components/AddButton.jsx","components/Foodbox.jsx","components/Food.jsx","components/Header.jsx","components/Form.jsx","components/AddNew.jsx","components/Search.jsx","components/Information.jsx","components/TodayFoods.jsx","App.js","serviceWorker.js","index.js"],"names":["AddButton","className","onClick","this","props","addItem","Component","Foodbox","state","quantity","food","handleInputChange","e","setState","target","value","addItemFunction","key","src","image","alt","name","calories","type","defaultValue","min","onChange","Food","a","addTodayMeal","populateAll","allFoods","map","eachFood","i","Header","title","Form","onSubmit","submitHandle","changeHandle","AddNew","open","setForm","handleFormSubmit","preventDefault","addTheMeal","toggleOpen","showForm","style","marginBottom","Search","query","search","placeholder","ref","input","filter","Information","selectedMeals","something","pickedFoods","each","total","Number","orders","newMealsShow","foods","Fragment","caloricTotal","TodayFoods","App","displayFoods","pushFood","foodsCopy","unshift","compare","searchResults","toUpperCase","includes","cart","push","newCalories","console","log","addTodayMealUpdates","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b9f3317.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AddButton extends Component {\n    render() {\n        return (\n            <button className=\"button is-info\" onClick={this.props.addItem}>+</button>\n        );\n    }\n}\n\nexport default AddButton;","import React, { Component } from \"react\";\nimport AddButton from \"./AddButton\";\n\nclass Foodbox extends Component {\n  state = {\n    quantity: 1,\n    food: this.props.food\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      quantity: e.target.value\n    });\n  };\n\n  addItem = () => {\n    this.props.addItemFunction(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <article className=\"media\" key={this.key}>\n          <div className=\"media-left\">\n            <figure className=\"image is-64x64\">\n              <img src={this.props.food.image} alt=\"\" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <p>\n                <strong>{this.props.food.name}</strong> <br />\n                <small>{this.props.food.calories} cal</small>\n              </p>\n            </div>\n          </div>\n          <div className=\"media-right\">\n            <div className=\"field has-addons\">\n              <div className=\"control\">\n                <input\n                  name=\"quantity\"\n                  className=\"input\"\n                  type=\"number\"\n                  defaultValue=\"1\"\n                  min=\"0\"\n                  onChange={this.handleInputChange}\n                />\n              </div>\n              <div className=\"control\">\n                <AddButton addItem={this.addItem} />\n              </div>\n            </div>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default Foodbox;\n","import React, { Component } from \"react\";\nimport Foodbox from \"./Foodbox\";\n// import foods from \"../foods.json\"\n\nclass Food extends Component {\n  addItemFunction = (a) => {\n    this.props.addTodayMeal(a);\n  };\n\n  populateAll = () => {\n    return this.props.allFoods.map((eachFood, i) => (\n      <Foodbox\n        key={i}\n        food={eachFood}\n        addItemFunction={this.addItemFunction}\n      ></Foodbox>\n    ));\n  };\n\n  render() {\n    return <div className=\"column is-two-thirds\">{this.populateAll()}</div>;\n  }\n}\n\nexport default Food;","import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <h1 className=\"title\">{this.props.title}</h1>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    return (\n        <form onSubmit={this.props.submitHandle} onChange = {this.props.changeHandle} className=\"column is-half\">\n          <div className=\"field\">\n            <label className=\"label\">Name:</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"name\"\n                onChange={this.props.changeHandle}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Calories:</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"number\"\n                name=\"calories\"\n                onChange={this.props.changeHandle}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Image URL:</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"image\"\n                onChange={this.props.changeHandle}\n              />\n            </div>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-primary\">Submit</button>\n          </div>\n        </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\n\nclass AddNew extends Component {\n  state = {\n    calories: 0,\n    image: \"\",\n    name: \"\",\n    quantity: 0,\n    open: false\n  };\n\n  setForm = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.props.addTheMeal(this.state);\n    this.setState({\n      calories: 0,\n      image: \"\",\n      name: \"\",\n      quantity: 0,\n      open: false\n    });\n  };\n\n  toggleOpen = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  showForm = () => {\n    let style = {\n      marginBottom: \"10px\"\n    };\n    if (this.state.open) {\n      return (\n        \n          <Form\n            submitHandle={this.handleFormSubmit}\n            changeHandle={this.setForm}\n          />\n        \n      );\n    } else {\n      return (\n        <button\n          className=\"button is-primary\"\n          style={style}\n          onClick={this.toggleOpen}\n        >\n          Add New Meal\n        </button>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.showForm()}</div>;\n  }\n}\n\nexport default AddNew;\n","import React, { Component } from \"react\";\n\nclass Search extends Component {\n  state = {\n    query: \"\"\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      query: this.search.value\n    });\n  };\n\n  render() {\n    return (\n      <form>\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search for...\"\n              ref={input => (this.search = input)}\n              onChange={this.props.filter()}\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info\">Search</button>\n          </div>\n        </div>\n        <p>{this.state.query}</p>\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nclass Information extends Component {\n  selectedMeals = () => {\n    let mappedMeals = this.props.something.pickedFoods.map((each, i) => {\n      let total = Number(each.quantity) * Number(each.calories);\n      let orders = \"order\";\n      if (each.quantity > 1) {\n        orders = \"orders\";\n      }\n      return (\n        <li key={i}>\n          {each.quantity} {orders} of {each.name} = {total} calories\n        </li>\n      );\n    });\n    return mappedMeals;\n  };\n\n  newMealsShow = () => {\n    let foods = this.props.something.pickedFoods;\n    \n    for(let key in foods){\n      return (\n\n        <li>{Number(foods[key].quantity) * Number(foods[key].calories)}</li>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ul>{this.selectedMeals()}</ul>\n        {<strong>Total: {this.props.something.caloricTotal} cal</strong>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Information;\n","import React, { Component } from \"react\";\nimport Information from \"./Information\";\n\nclass TodayFoods extends Component {\n  render() {\n    return (\n      <div className=\"column content\">\n        <h2 className=\"subtitle\">Today's Foods</h2>\n        <Information something={this.props.something}/>\n      </div>\n    );\n  }\n}\n\nexport default TodayFoods;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bulma/css/bulma.css\";\nimport foods from \"./foods.json\";\nimport Food from \"./components/Food\";\nimport Header from \"./components/Header\";\nimport AddNew from \"./components/AddNew\";\nimport Search from \"./components/Search\";\nimport TodayFoods from \"./components/TodayFoods\";\n\nclass App extends Component {\n  state = {\n    allFoods: foods,\n    displayFoods: foods,\n    pickedFoods: [],\n    caloricTotal: 0\n  };\n\n  pushFood = food => {\n    let foodsCopy = [...this.state.allFoods];\n    foodsCopy.unshift(food);\n    this.setState({\n      allFoods: foodsCopy,\n      displayFoods: foodsCopy,\n    });\n  };\n\n  compare = e => {\n    let searchResults = foods.filter(food =>\n      food.name.toUpperCase().includes(e.target.value.toUpperCase())\n    );\n    this.setState({\n      allFoods: searchResults\n    });\n  };\n\n  addTodayMeal = a => {\n    let cart = [...this.state.pickedFoods];\n    cart.push({\n      quantity: Number(a.quantity),\n      name: a.food.name,\n      calories: a.food.calories\n    });\n    let newCalories =\n      this.state.caloricTotal + Number(a.quantity) * Number(a.food.calories);\n    console.log(newCalories, this.state.caloricTotal);\n    this.setState({\n      pickedFoods: cart,\n      caloricTotal: newCalories\n    });\n  };\n\n  addTodayMealUpdates = food => {\n    let cart = {...this.state.pickedFoods};\n    cart[food.name] = food;\n    this.setState({\n      pickedFoods: cart,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header title=\"IronNutrition\" />\n        <AddNew addTheMeal={this.pushFood} />\n        <Search filter={() => this.compare} />\n        <div className=\"columns\">\n          <Food\n            allFoods={this.state.allFoods}\n            addTodayMeal={this.addTodayMeal}\n          ></Food>\n          <TodayFoods something={this.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\n// import foods from './foods.json'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}